@using BusinessObjects.DTOs;
@using BusinessObjects.Models;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var categories = ViewBag.Categories as IEnumerable<CategoryDTO>;
    var products = ViewBag.Products as IEnumerable<ProductDTO>;
    var paginationMetadata = ViewBag.PaginationMetadata as PaginationMetadata;
    var selectedOrderBy = Context.Request.Query["orderby"].ToString();
    var selectedCategory = "0"; // Default value if CatId is not present or not a valid integer

    if (int.TryParse(Context.Request.Query["CatId"].ToString(), out int categoryId))
    {
        // If CatId is present and successfully parsed to an integer, use its value
        selectedCategory = categoryId.ToString();
    }
}

<div class="container-fluid">

    <h1 class="text-danger">Product Management</h1>
    <form asp-controller="Products" asp-action="Index" method="get" class="my-4">
        <div class="row">
            <div class="col-md-2 mb-3 d-flex">
                <label class="form-label m-1">Category</label><br />
                <select name="CatId" class="form-control">
                    <option value="">All</option>
                    @foreach (var item in categories)
                    {
                        <option value="@item.CategoryId" selected="@(Int32.Parse(selectedCategory) ==  item.CategoryId ? "selected" : null)">
                            @item.CategoryName
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-4 mb-3 d-flex">
                <label for="ProductName" class="form-label m-1 w-50">Search name</label>
                <input type="text" name="ProductName" value="@Context.Request.Query["ProductName"]" class="form-control">
            </div>
            <div class="col-md-3 mb-3 d-flex">
                <label class="form-label m-1">Filter</label><br />
                <select name="orderby" class="form-control">
                    <option value="">All</option>
                    <option value="price-desc" selected="@(selectedOrderBy == "price-desc" ? "selected" : null)">
                        Price decrease
                    </option>
                    <option value="price-increase" selected="@(selectedOrderBy == "price-increase" ? "selected" : null)">
                        Price increase
                    </option>
                </select>
            </div>


            <div class="col-md-3 mb-3 ">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>

    </form>
       @* <button class="btn btn-primary w-20 mb-3">
        <a class="text-decoration-none text-white" asp-controller="Products" asp-action="ExportExcel" asp-route-catid="@selectedCategory" asp-route-orderby="@selectedOrderBy" asp-route-productname="@Context.Request.Query["ProductName"]">Export to Excel</a>
        </button>*@
    <div class="mb-2">
        <a class="text-decoration-none font-weight-bold" asp-controller="Products" asp-action="Create">New product</a>
    </div>



    <table class="table">
        <thead>
            <tr>
                <th>
                    ID
                </th>
                <th>
                    Name
                </th>
                <th>
                    Price
                </th>
                <th>
                    Image
                </th>
                <th>
                    Category
                </th>

                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>
                        @product.Id
                    </td>
                    <td>
                        @product.Name
                    </td>
                    <td>
                        @product.Price
                    </td>
                    <td><img style="width:80px;height:100px" src="~/@Html.DisplayFor(modelItem => product.Image)" /></td>
                    <td>
                        @product.CategoryName
                    </td>
                    <td>
                        <a class="text-decoration-none font-weight-bold" asp-action="Edit" asp-route-id="@product.Id">Edit</a> |
                        <a class="text-decoration-none font-weight-bold" asp-action="Delete" asp-route-id="@product.Id" onclick="return confirm('Are you sure you want to delete this product?')">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (paginationMetadata != null)
    {
        <div class="btn-group-page" style="align-items">
            @if (paginationMetadata.CurrentPage > 1)
            {
                <a class="btn btn-default" href="@Url.Action("Index", new { CatId= selectedCategory, productName = Context.Request.Query["ProductName"], orderby = selectedOrderBy, pageNumber = paginationMetadata.CurrentPage - 1, pageSize = paginationMetadata.PageSize })"><i class="fa fa-angle-left"></i></a>
            }
            @for (var i = 1; i <= paginationMetadata.TotalPages; i++)
            {
                <a class="btn @(paginationMetadata.CurrentPage == i ? "btn-primary" : "btn-default")" href="@Url.Action("Index", new { CatId = selectedCategory, productName = Context.Request.Query["ProductName"], orderby = selectedOrderBy, pageNumber = i, pageSize = paginationMetadata.PageSize })">@i</a>
            }
            @if (paginationMetadata.CurrentPage < paginationMetadata.TotalPages)
            {
                <a class="btn btn-default" href="@Url.Action("Index", new { CatId = selectedCategory, productName = Context.Request.Query["ProductName"], orderby = selectedOrderBy, pageNumber = paginationMetadata.CurrentPage + 1, pageSize = paginationMetadata.PageSize })"><i class="fa fa-angle-right"></i></a>
            }
        </div>
    }

</div>
